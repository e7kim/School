	public static int binarySearch(citystate[] array, int i)
	{	
		int L = 0, R = array.length-1;
		while(L <= R)
		{
			int M = L + (R-L)/2;
			if (array[M].getCity().equals(array[i].getState()))
			{
//				System.out.println(M);
				M = binarySearchState(array, M, i);
				return M;
			}
			else if (array[M].getCity().compareTo(array[i].getState()) < 0)
			{
				L = M + 1;
			}
			else if (array[M].getCity().compareTo(array[i].getState()) > 0)
			{
				R = M - 1;
			}
		}
		return -1;
	}
	public static int binarySearchState(citystate[] array, int M, int i)
	{
		int L = M;
		int R = M;
		String thisCity = array[M].getCity();
		while (array[L-1].getCity().equals(thisCity))
		{
			L -= 1;
		}
		while (array[R+1].getCity().equals(thisCity))
		{
			R += 1;
		}
		while(L <= R)
		{
			M = L + (R-L)/2;
			if (array[M].getState().equals(array[i].getState()))
			{
				return M;
			}
			else if (array[M].getState().compareTo(array[i].getState()) < 0)
			{
				L = M + 1;
			}
			else if (array[M].getState().compareTo(array[i].getState()) > 0)
			{
				R = M - 1;
			}
		}
		return -1;
	}

}
