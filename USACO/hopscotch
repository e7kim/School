import java.util.*;
import java.io.*;

public class hopscotch {

	public static int scount = 0;
	public static void main(String[] args) throws Exception {
		Scanner in = new Scanner(new File("hopscotch.in"));
		PrintWriter out = new PrintWriter(new File("hopscotch.out"));
		int R = in.nextInt();
		int C = in.nextInt();
		int K = in.nextInt();
		int[][] board = new int[R][C];
		int[][] paths = new int[R][C];
		for (int i = 0; i < R; i++)
		{
			for (int j = 0; j < C; j++)
			{
				board[i][j] = in.nextInt();
				System.out.print(board[i][j]);
			}
			System.out.println();
		}
		in.close();
		
		paths[0][0] = 1;
		scanNext(0, 0, board, paths);
		System.out.println(paths[R-1][C-1] % 1000000007);
		out.println(paths[R-1][C-1] %= 1000000007);
		System.out.println(scount);
		
		for (int i = 0; i < R; i++)
		{
			for (int j = 0; j < C; j++)
			{
				System.out.print(paths[i][j]);
			}
			System.out.println();
		}
		
		out.close();
	}
	public static void scanNext(int startR, int startC, int[][] board, int[][] paths)
	{
		if (startR != board.length && startC != board[0].length)
		{
			for (int i = startR + 1; i < board.length-1; i++)
			{
				for (int j = startC + 1; j < board[0].length-1; j++)
				{
					scount++;
					if (board[i][j] != board[startR][startC])
					{
						paths[i][j]++;
						paths[i][j] %= 1000000007;
						scanNext(i, j, board, paths);
					}
				}
			}
			if (board[board.length-1][board[0].length-1] != board[startR][startC])
			{
				scount++;
				paths[paths.length-1][paths[0].length-1]++;
			}
		}

	}

}
